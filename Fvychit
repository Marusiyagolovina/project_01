// Функция вычитает одно большое число из другого
void sub(int *buff1, int len1, int *buff2, int len2, int *result, int *result_length)
{
    bool isNegative = false;
    if(len1 < len2 || (len1 == len2 && compare(buff1, len1, buff2, len2))){ // Проверка условия: minuend >= subtrahend
        swap(&buff1, &buff2);
        swap(&len1, &len2);
        isNegative = true;
    }

    int borrow = 0;
    int i = len1 - 1;
    int j = len2 - 1;
    int k = 0;

    while(i >= 0){
        int digit1 = buff1[i];
        int digit2 = (j >= 0)? buff2[j--]: 0;
        
        int diff = digit1 - digit2 - borrow;
        if(diff < 0){
            diff += 10;
            borrow = 1;
        } else {
            borrow = 0;
        }
        result[k++] = diff;
        i--;
    }

    // Удаляем ведущие нули
    while(k > 1 && result[k-1] == 0){
        k--;
    }

    *result_length = k;
    if(isNegative){
        printf("n/a\n");
    }
}

// Вспомогательная функция сравнения двух чисел
int compare(int* a, int alen, int* b, int blen)
{
    for(int i=alen-1,j=blen-1;i>=0&&j>=0;--i,--j){
        if(a[i]>b[j]) return 1;
        if(b[j]>a[i]) return -1;
    }
    return 0;
}

// Вспомогательная функция обмена значений местами
void swap(int** p1, int** p2)
{
    int* tmp = *p1;
    *p1 = *p2;
    *p2 = tmp;
}
